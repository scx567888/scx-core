<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cool.scx</groupId>
    <artifactId>scx</artifactId>
    <packaging>jar</packaging>
    <name>scx</name>
    <version>0.6.0</version>
    <description>
        SCX is a "web development framework";
        Goal is to provide a simple and fast development experience.
    </description>
    <url>https://github.com/scx567888/scx</url>

    <properties>
        <!-- 项目构建时的字符集 强烈建议采用默认值 UTF-8 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- 构建项目时jar包的默认启动类 在您自己的项目中请覆写此值 -->
        <scxApp.mainClass>cool.scx.ScxCoreApp</scxApp.mainClass>
    </properties>

    <dependencies>

        <!-- vert.x -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web</artifactId>
            <version>4.0.2</version>
        </dependency>

        <!-- freemarker 用于cms 前台页面渲染工作 -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.31</version>
        </dependency>

        <!-- Jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.12.1</version>
        </dependency>

        <!-- 依赖注入 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>5.3.4</version>
        </dependency>

        <!--  数据库 驱动 以及连接池 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.23</version>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>4.0.2</version>
        </dependency>

        <!-- 轻量级的加密解密工具包 -->
        <dependency>
            <groupId>org.jasypt</groupId>
            <artifactId>jasypt</artifactId>
            <version>1.9.3</version>
        </dependency>

        <!-- 操作 特定格式文件的工具包 -->
        <dependency>
            <groupId>net.coobird</groupId>
            <artifactId>thumbnailator</artifactId>
            <version>0.4.13</version>
        </dependency>

        <!-- 日志包 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.30</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>

        <!-- 测试 -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>7.3.0</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <!-- 此项目的 licenses -->
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://github.com/scx567888/scx/blob/master/LICENSE</url>
        </license>
    </licenses>

    <!-- 开发者信息 -->
    <developers>
        <developer>
            <name>司昌旭</name>
            <email>scx567888@outlook.com</email>
            <organization>https://github.com/scx567888</organization>
            <url>https://scx.cool</url>
        </developer>
    </developers>

    <!-- scm -->
    <scm>
        <connection>scm:git:https://github.com/scx567888/scx.git</connection>
        <developerConnection>scm:git:https://github.com/scx567888/scx.git</developerConnection>
        <url>https://github.com/scx567888/scx</url>
    </scm>

    <!-- mvn deploy 发布的路径 -->
    <distributionManagement>
        <!-- release 版本 -->
        <repository>
            <id>oss-sonatype</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
        </repository>
        <!-- snapshots (快照) 版本 -->
        <snapshotRepository>
            <id>oss-sonatype</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <plugins>
            <!-- 此插件用于测试 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <suiteXmlFiles>
                        <suiteXmlFile>${project.basedir}/src/test/resources/test/test.xml</suiteXmlFile>
                    </suiteXmlFiles>
                </configuration>
            </plugin>
            <!-- 此插件用于打包 java doc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <charset>UTF-8</charset>
                    <docencoding>UTF-8</docencoding>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 此插件用于打包源码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 对 jar 包等文件进行 pgp 签名 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 此插件用于设置 java 程序编译时的参数 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <compilerArgs>
                        <!-- 使编译后 class 文件携带参数名称 -->
                        <arg>-parameters</arg>
                    </compilerArgs>
                    <!-- 指定编译时的jdk 版本 -->
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>
            <!-- 此插件用于设置 java 程序的依赖项 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <!-- 复制所需依赖的 jar 包到 lib 文件夹下 , 部署时如果有新增的依赖项记得更新部署项目的 lib 文件夹 -->
                <executions>
                    <execution>
                        <!-- 如不想生成 依赖或加快打包速度 请注释掉此标签 -->
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <!-- 只包含运行依赖项 -->
                            <includeScope>compile</includeScope>
                            <!-- 排除 test 依赖 -->
                            <excludeScope>test</excludeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- 此插件用于将项目打包为 可执行 jar 包-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <!-- 此处我们将主类加入到描述文件中 方便程序启动 -->
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib</classpathPrefix>
                            <mainClass>${scxApp.mainClass}</mainClass>
                        </manifest>
                    </archive>
                    <!-- 在打包时排除不需要的文件 具体文件说明见下方 -->
                    <excludes>
                        <!-- 默认 cms 模板测试文件 -->
                        <exclude>/c/</exclude>
                        <!-- 默认 ssl 占位空文件 -->
                        <exclude>/certificate/</exclude>
                        <!-- 默认 插件 占位空文件 -->
                        <exclude>/plugins/</exclude>
                        <!-- 默认 sql 脚本 -->
                        <exclude>/sql/</exclude>
                        <!-- 默认 配置文件 -->
                        <exclude>/*.xml</exclude>
                        <exclude>/*.json</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
